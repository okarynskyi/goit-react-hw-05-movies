{"version":3,"file":"static/js/10.1aedf427.chunk.js","mappings":"yNACA,EAAuB,wBAAvB,EAAwD,0BAAxD,EAA0F,yB,SCG7EA,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACpC,GAA8BC,EAAAA,EAAAA,UAASD,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAgBE,OACI,kBAAMJ,SAXS,SAAAK,GAEnB,GADAA,EAAEC,iBACqB,KAAnBH,EAAQI,OACV,OAAOC,MAAM,mCAGfR,EAASG,GACTC,EAAWD,EACZ,EAGmCM,UAAWC,EAAzC,WACI,kBACIC,KAAK,UACLV,MAAOE,EACPS,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,SAtBO,SAAAV,GACnBD,EAAWC,EAAEW,OAAOf,MAAMgB,cAC3B,EAqBaR,UAAWC,EACXQ,YAAY,kBAEhB,mBAAQN,KAAK,SAASH,UAAWC,EAAjC,UACI,yCAIf,E,SCOD,EAvCe,WAAO,IAAD,EACnB,GAA4BR,EAAAA,EAAAA,UAAS,IAArC,eAAOiB,EAAP,KAAeC,EAAf,KACA,GAA0BlB,EAAAA,EAAAA,UAAS,MAAnC,eAAOmB,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMtB,EAAO,UAAGqB,EAAaE,IAAI,gBAApB,QAAgC,IAE7CC,EAAAA,EAAAA,YAAU,WACQ,KAAZxB,IAIJyB,EAAAA,EAAAA,IAAgBzB,GACb0B,MAAK,SAAAV,GACJ,GAAsB,IAAlBA,EAAOW,OACT,OAAOtB,MACL,0CAGJY,EAAUD,EACX,IACAY,OAAM,SAAAV,GAAK,OAAIC,EAASD,EAAMW,QAAnB,GACf,GAAE,CAAC7B,IASJ,OACE,4BACE,SAACJ,EAAD,CAAWC,SATU,SAAAC,GACnBE,IAAYF,GAGhBwB,EAA0B,KAAVxB,EAAe,CAAEgC,MAAOhC,GAAU,CAAC,EACpD,EAI0CA,MAAOE,IAC7CkB,GAASb,MAAMa,GACfF,EAAOW,OAAS,IAAK,SAACI,EAAA,EAAD,CAAYf,OAAQA,MAG/C,C","sources":["webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Searchbar_form__D-hp5\",\"button\":\"Searchbar_button__nkcjk\",\"input\":\"Searchbar_input__19umw\"};","import { useState } from 'react';\nimport css from './Searchbar.module.css'\nimport PropTypes from 'prop-types';\n\nexport const Searchbar = ({ onSubmit, value }) => {\n  const [request, setRequest] = useState(value);\n\n  const handleChange = e => {\n    setRequest(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (request.trim() === '') {\n      return alert('Enter your request in the field');\n    }\n\n    onSubmit(request);\n    setRequest(request);\n  };\n\n    return (\n        <form onSubmit={handleSubmit} className={css.form}>\n            <input\n                name=\"request\"\n                value={request}\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                onChange={handleChange}\n                className={css.input}\n                placeholder=\"Search movie\"\n            />\n            <button type=\"submit\" className={css.button}>\n                <span>Search</span>\n            </button>\n        </form>\n    );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'API';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const request = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (request === '') {\n      return;\n    }\n\n    getSearchMovies(request)\n      .then(movies => {\n        if (movies.length === 0) {\n          return alert(\n            'Sorry, no movies. Try another require.'\n          );\n        }\n        setMovies(movies);\n      })\n      .catch(error => setError(error.message));\n  }, [request]);\n\n  const handleFormSubmit = value => {\n    if (request === value) {\n      return;\n    }\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleFormSubmit} value={request} />\n      {error && alert(error)}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </div>\n  );\n};\n\nexport default Movies;"],"names":["Searchbar","onSubmit","value","useState","request","setRequest","e","preventDefault","trim","alert","className","css","name","type","autoComplete","autoFocus","onChange","target","toLowerCase","placeholder","movies","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","getSearchMovies","then","length","catch","message","query","MoviesList"],"sourceRoot":""}